{"version":3,"sources":["view/pages/Addnew/Addnew.js"],"names":["Addnew","props","state","id","title","description","date","time","loading","showingAlert","handleChange","bind","handleSignUp","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","number","Math","random","toString","substr","this","setState","e","target","name","value","preventDefault","currentdate","currenttime","postpara","created_date","created_time","dispatch","type","item","history","push","className","container","xs","severity","onClose","ref","onSubmit","method","label","variant","onChange","validators","errorMessages","defaultValue","InputLabelProps","shrink","color","React","Component","connect"],"mappings":"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","file":"static/js/6.b3f9bc20.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Addnew.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { history } from '../../../helpers';\r\nimport { connect } from 'react-redux'\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Addnew extends React.Component\r\n{\r\n\tconstructor(props) {\r\n\t      super(props);\r\n\t      this.state = {\r\n\t      \t  id: '',\r\n\t          title: '',\r\n\t          description: '',\r\n\t          date: '',\r\n\t          time: '',\r\n\t          loading:false,\r\n\t          showingAlert: false,\r\n\t      }\r\n\r\n\t      this.handleChange = this.handleChange.bind(this);\r\n\t      this.handleSignUp = this.handleSignUp.bind(this);\r\n\t}\r\n\tcomponentWillMount() {\r\n\t      var today = new Date();\r\n\t      var date = today.getFullYear() + '-' + (today.getMonth()+1) + '-' + today.getDate();\r\n          var time = today.getHours()+':'+ today.getMinutes();\r\n          var number = Math.random()\r\n          number.toString(36); \r\n          var id = number.toString(36).substr(2, 9);\r\n          this.setState({ date: date,time:time,id:id });\r\n          \r\n\t}\r\n\thandleChange(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    \r\n    handleSignUp(e) {\r\n\r\n    \te.preventDefault();\r\n    \tvar today = new Date();\r\n\t    var currentdate = today.getFullYear() + '-' + (today.getMonth()+1) + '-' + today.getDate();\r\n        var currenttime = today.getHours()+':'+ today.getMinutes();\r\n    \tconst { id, title, description, date, time } = this.state;\r\n\t    const postpara = { id:id, title: title, description: description, date: date, time:time, created_date:currentdate,created_time:currenttime };\r\n\t    this.props.dispatch({ type: 'ADD',item:postpara });\r\n        this.props.history.push(\"/home\");\r\n\t   // this.setState({ loading: false, showingAlert: true });\r\n    }\r\n     \r\n\trender(){\r\n\t\tconst { title, description, date, time } = this.state;\r\n\t\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"mainbody signup-page\">\r\n\t\t\t   <div className=\"padding\">\r\n                   <Grid container>\r\n                       <Grid item xs={2}></Grid>\r\n                       <Grid item xs={8}>\r\n\t                       <Card>\r\n\t                       <h4>Add New</h4>\r\n\t                        { this.state.showingAlert ?\r\n\t\t                        \t<div>\r\n\t\t                                <Alert severity=\"error\" onClose={() => { this.setState({ showingAlert: false }) }}>Registration failed. Please try again!</Alert>\r\n\t\t                                <p></p>\r\n\t\t                            </div>\r\n                            : '' }\r\n\t                        <ValidatorForm ref=\"form\" onSubmit={this.handleSignUp} method=\"POST\">\r\n\t                            <TextValidator label=\"Title\" variant=\"outlined\" name=\"title\" value={title} onChange={this.handleChange} validators={['required']} errorMessages={['This field is required']}/>\r\n\t                            \r\n                                <TextValidator label=\"Description\" variant=\"outlined\" name=\"description\" value={description} onChange={this.handleChange} validators={['required']} errorMessages={['Please enter description']}/>\r\n\t\t                         \r\n\t\t                        <TextValidator type=\"date\" variant=\"outlined\" name=\"date\" value={date} defaultValue={date} InputLabelProps={{ shrink: true }} onChange={this.handleChange} validators={['required']} errorMessages={['Please enter date']}/>\r\n\t\t                        \r\n\t\t                        <TextValidator type=\"time\" variant=\"outlined\" name=\"time\" value={time} defaultValue={time} InputLabelProps={{ shrink: true }} onChange={this.handleChange} validators={['required']} errorMessages={['Please enter time']}/>\r\n\r\n\t\t                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Save</Button>\r\n                            </ValidatorForm>  \r\n\t\t                       \r\n\t\t                   </Card>\r\n                       </Grid>\r\n                       <Grid item xs={2}></Grid>\r\n                   </Grid>\r\n\t\t\t   </div>\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    } \r\n}\r\nexport default connect(mapStateToProps,null)(Addnew);\r\n"],"sourceRoot":""}