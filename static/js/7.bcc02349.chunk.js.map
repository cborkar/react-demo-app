{"version":3,"sources":["view/pages/Edit/Edit.js"],"names":["Edit","props","state","id","match","params","title","description","date","time","created_date","created_time","loading","showingAlert","handleChange","bind","handleSignUp","getrow","JSON","parse","localStorage","getItem","filter","row","length","this","setState","history","push","e","target","name","value","preventDefault","setTimeout","postpara","dispatch","type","item","className","container","xs","severity","onClose","ref","onSubmit","method","label","variant","onChange","validators","errorMessages","defaultValue","InputLabelProps","shrink","color","React","Component","connect"],"mappings":"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","file":"static/js/7.bcc02349.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Edit.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { history } from '../../../helpers';\r\nimport { connect } from 'react-redux'\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Edit extends React.Component\r\n{\r\n\tconstructor(props) {\r\n\t      super(props);\r\n\t      this.state = {\r\n\t      \t  id: this.props.match.params.id,\r\n\t          title: '',\r\n\t          description: '',\r\n\t          date: '',\r\n\t          time: '',\r\n\t          created_date: '',\r\n\t          created_time: '',\r\n\t          loading:false,\r\n\t          showingAlert: false,\r\n\t      }\r\n\r\n\t      this.handleChange = this.handleChange.bind(this);\r\n\t      this.handleSignUp = this.handleSignUp.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst cart = JSON.parse(localStorage.getItem('cartrecord'));\r\n\t    const getrow = cart.filter((row) => row.id === this.state.id);\r\n\t    if(getrow.length > 0){\r\n\t    \tthis.setState({ \r\n\t        \tid: getrow[0].id,\r\n\t        \ttitle: getrow[0].title,\r\n\t        \tdescription: getrow[0].description,\r\n\t        \tdate: getrow[0].date,\r\n\t        \ttime: getrow[0].time,\r\n\t        \tcreated_date: getrow[0].created_date,\r\n\t        \tcreated_time: getrow[0].created_time\r\n\t        });\r\n\t    }else{\r\n\t    \tthis.props.history.push(\"/home\");\r\n\t    }\r\n\t}\r\n\thandleChange(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    \r\n    handleSignUp(e) {\r\n    \te.preventDefault();\r\n    \tsetTimeout(() => {\r\n\t    \tconst { id, title, description, date, time, created_date, created_time } = this.state;\r\n\t\t    const postpara = { id:id, title: title, description: description, date: date, time:time, created_date: created_date, created_time:created_time };\r\n\t\t    this.props.dispatch({ type: 'EDIT',item:postpara });\r\n\t        this.props.history.push(\"/home\");\r\n        }, 1000); \r\n    }\r\n     \r\n\trender(){\r\n\t\tconst { title, description, date, time } = this.state;\r\n\t\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"mainbody signup-page\">\r\n\t\t\t   <div className=\"padding\">\r\n                   <Grid container>\r\n                       <Grid item xs={2}></Grid>\r\n                       <Grid item xs={8}>\r\n\t                       <Card>\r\n\t                       <h4>Edit</h4>\r\n\t                        { this.state.showingAlert ?\r\n\t\t                        \t<div>\r\n\t\t                                <Alert severity=\"error\" onClose={() => { this.setState({ showingAlert: false }) }}>Registration failed. Please try again!</Alert>\r\n\t\t                                <p></p>\r\n\t\t                            </div>\r\n                            : '' }\r\n\t                        <ValidatorForm ref=\"form\" onSubmit={this.handleSignUp} method=\"POST\">\r\n\t                            <TextValidator label=\"Title\" variant=\"outlined\" name=\"title\" value={title} onChange={this.handleChange} validators={['required']} errorMessages={['This field is required']}/>\r\n\t                            \r\n                                <TextValidator label=\"Description\" variant=\"outlined\" name=\"description\" value={description} onChange={this.handleChange} validators={['required']} errorMessages={['Please enter description']}/>\r\n\t\t                         \r\n\t\t                        <TextValidator type=\"date\" variant=\"outlined\" name=\"date\" value={date} defaultValue={date} InputLabelProps={{ shrink: true }} onChange={this.handleChange} validators={['required']} errorMessages={['Please enter date']}/>\r\n\t\t                        \r\n\t\t                        <TextValidator type=\"time\" variant=\"outlined\" name=\"time\" value={time} defaultValue={time} InputLabelProps={{ shrink: true }} onChange={this.handleChange} validators={['required']} errorMessages={['Please enter time']}/>\r\n\r\n\t\t                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Update</Button>\r\n                            </ValidatorForm>  \r\n\t\t                       \r\n\t\t                   </Card>\r\n                       </Grid>\r\n                       <Grid item xs={2}></Grid>\r\n                   </Grid>\r\n\t\t\t   </div>\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    } \r\n}\r\nexport default connect(mapStateToProps,null)(Edit);\r\n"],"sourceRoot":""}